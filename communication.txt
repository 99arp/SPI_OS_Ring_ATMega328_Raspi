
/* PWM Dutycycle Bytes 
 2. Daten- Byte der Funktion PWM_on 


10 = 0000 1010
20 = 0001 0100
30 = 0001 1110
40 = 0010 1000
50 = 0011 0010
60 = 0011 1100
70 = 0100 0110
80 = 0101 0000
90 = 0101 1010 


*/



/* PWM Zuordnung des 2. Daten Byte der Funktion zu einem Prescaler


1 = 0000 0001   //20 MHz
2 = 0000 0010   //2,5 MHz
3 = 0000 0100   //312,5 kHz
4 = 0000 1000   //78,125 kHz
5 = 0001 0000   // 19,53 kHz

*/

#define NUMBER_OF_FUNCTIONS 10


const uint8_t the_table [NUMBER_OF_FUNCTIONS] = {}; 

typdef enum 
{
	FirstByte, 
	SecondByte; 


} DataByte; 



void thisfunctiontakestheinputandreturnschar(char reievedData)
 {





 }

 void analysefirstbit(char recievedData)
 {

 }

  void analysefirstbit(char recievedData)
 {
 	
 }
  void analysefirstbit(char recievedData)
 {
 	
 }
 